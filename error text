public List<DbWfmPropertiesDTO> getDbProperties(List<String> keyNames, Integer domainId) {
		List<DbWfmPropertiesDTO> dbWfmProperties = new ArrayList<>();
		try {
			LOGGER.info("getDbProperties inputs:: keyNames = " + keyNames + ", domainId = " + domainId);
			String sql = "SELECT DOMAIN_ID, KEY, VALUE FROM WFM_CORE.WFM_PROPERTIES "
					+ "WHERE KEY IN (:keyNames) AND DOMAIN_ID = :domainId";
			// 
			
			MapSqlParameterSource params = new MapSqlParameterSource();
			params.addValue("keyNames", keyNames);
			params.addValue("domainId", domainId);
			dbWfmProperties = wfmNamedParameterJdbcTemplate.query(sql, params, DbWfmPropertiesDTO.getMapper()); // can you explain this line 
		} catch (Exception err) {
			LOGGER.error("getDbProperties :: error::", err);
		}
		LOGGER.info("getDbProperties returns:: dbWfmProperties = " + dbWfmProperties);
		return dbWfmProperties;
	}



package com.verizon.ihut.model;

import java.sql.ResultSet;
import java.sql.SQLException;

import org.springframework.jdbc.core.RowMapper;

public class DbWfmPropertiesDTO {
    private Integer domainId;
	private String keyName;
	private String value;
	public Integer getDomainId() {
		return domainId;
	}
	public void setDomainId(Integer domainId) {
		this.domainId = domainId;
	}
	public String getKeyName() {
		return keyName;
	}
	public void setKeyName(String keyName) {
		this.keyName = keyName;
	}
	public String getValue() {
		return value;
	}
	public void setValue(String value) {
		this.value = value;
	}
	
	public static RowMapper<DbWfmPropertiesDTO> getMapper() {
		return new RowMapper<DbWfmPropertiesDTO>() {
			@Override
			public DbWfmPropertiesDTO mapRow(ResultSet rs, int rowNum) throws SQLException {
				DbWfmPropertiesDTO candidate = new DbWfmPropertiesDTO();
				candidate.setDomainId((rs.getInt("DOMAIN_ID")));
				candidate.setKeyName((rs.getString("KEY")));
				candidate.setValue((rs.getString("VALUE")));
				return (candidate);
			}
		};
	}
	@Override
	public String toString() {
		return "DbWfmPropertiesDTO [domainId=" + domainId + ", keyName=" + keyName + ", value=" + value + "]";
	}
	
	
}





String sql = "SELECT DOMAIN_ID, `KEY`, VALUE FROM WFM_CORE.WFM_PROPERTIES "
           + "WHERE `KEY` IN (" + String.join(",", Collections.nCopies(keyNames.size(), "?")) + ") "
           + "AND DOMAIN_ID = ?";

dbWfmProperties = jdbcTemplate.query(sql, 
    keyNames.toArray(), 
    DbWfmPropertiesDTO.getMapper()
);




------
String sql = "SELECT DOMAIN_ID, `KEY`, VALUE FROM WFM_CORE.WFM_PROPERTIES "
           + "WHERE FIND_IN_SET(`KEY`, :keyNames) AND DOMAIN_ID = :domainId";







Hello Srinivasan and Viknesh,

Regarding ticket no. PEDS-771, the issue has been analyzed and identified. The cancellation of NFID is not being reflected in the Status field on the project summary. This issue arises due to missing Domain ID and Value URL data. Once the missing data is inserted, the functionality will work as expected.

We have informed the DB team to insert the specific values into the database.

Best regards,